{"version":3,"sources":["hooks/useWindowDimensions.js","views/Home.js","components/Navbar.js","components/Footer.js","views/Portfolio.js","views/404.js","views/Routes.js","App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","root","marginTop","textAlign","minHeight","contactList","maxWidth","marginLeft","marginRight","paddingTop","contactListIcon","color","verticalDividerContainer","position","verticalDivider","horizontalDivider","huggingfaceIcon","fontSize","filter","textContainerSM","paddingRight","Home","classes","className","Grid","container","item","xs","sm","Typography","variant","gutterBottom","Divider","orientation","flexItem","List","component","aria-label","ListItem","button","target","href","ListItemIcon","ListItemText","primary","role","appBar","backgroundColor","display","alignItems","boxShadow","toolBar","slimWidth","justifyContent","paddingLeft","drawer","flexShrink","drawerPaper","appBarDivider","tab","minWidth","textDecoration","link","menuButton","Navbar","React","open","setOpen","pathname","useLocation","AppBar","Toolbar","Tabs","key","name","map","Tab","label","style","Link","to","IconButton","onClick","Drawer","anchor","paper","ModalProps","onBackdropClick","listItem","Footer","portfolioGrid","textParagraph","marginBottom","card","borderStyle","borderColor","borderWidth","Portfolio","spacing","Card","CardContent","CardActions","Button","size","textWrapper","statusCode","Fallback","Routes","exact","path","theme","createTheme","typography","fontFamily","join","h1","fontWeight","h2","h3","h4","body1","body2","palette","grey","background","default","App","ThemeProvider","CssBaseline","Container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21cdc6e1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\n\nexport const slimWidth = 700;\nexport const headerHeight = 64;\nexport const footerHeight = 100;\nexport const topMargin = 64;\nexport const smBreakpointWidth = 600;\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: topMargin,\n    height: \"100%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    minHeight: `calc(100vh - ${headerHeight}px - ${footerHeight}px - ${topMargin}px)`,\n  },\n  contactList: {\n    maxWidth: slimWidth,\n    width: \"100%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingTop: \"0px\",\n  },\n  contactListIcon: {\n    color: \"black\",\n  },\n  verticalDividerContainer: {\n    position: \"relative\",\n  },\n  verticalDivider: {\n    position: \"absolute\",\n    height: \"100%\",\n  },\n  horizontalDivider: {\n    width: \"100%\",\n    marginTop: \"24px\",\n  },\n  huggingfaceIcon: {\n    fontSize: \"23px\",\n    filter: \"grayscale(100%)\",\n  },\n  textContainerSM: {\n    paddingRight: \"16px\",\n  },\n});\n\nexport default function Home() {\n  const classes = useStyles();\n  const { width } = useWindowDimensions();\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sm={8}\n          className={width > smBreakpointWidth && classes.textContainerSM}\n        >\n          <Typography variant=\"h1\" gutterBottom>\n            Software\n            <br />\n            Developer\n          </Typography>\n          <Typography gutterBottom>\n            Hi, my name is Viktor Enzell.\n            <br />\n            <br />\n            I'm a full stack developer based in Stockholm, passionate about\n            building great products that utilize the power of machine learning.\n            I have a Master's degree in Computer Science from KTH, where I\n            specialized in AI, primarily focusing on natural language processing\n            and speech.\n            <br />\n            <br />\n            Check out some of my previous projects in my portfolio or on GitHub\n            and Hugging Face. Also, feel free to connect with me on LinkedIn!\n          </Typography>\n        </Grid>\n        {width > smBreakpointWidth ? (\n          <div className={classes.verticalDividerContainer}>\n            <Divider\n              orientation=\"vertical\"\n              flexItem\n              className={classes.verticalDivider}\n            />\n          </div>\n        ) : (\n          <Divider className={classes.horizontalDivider} />\n        )}\n        <Grid item xs={12} sm={4}>\n          <List\n            component=\"nav\"\n            aria-label=\"contact links\"\n            className={classes.contactList}\n          >\n            <ListItem\n              button\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://linkedin.com/in/viktor-enzell-66967913b/\"\n            >\n              <ListItemIcon className={classes.contactListIcon}>\n                <LinkedInIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"LinkedIn\" />\n            </ListItem>\n            <Divider />\n            <ListItem\n              button\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://github.com/viktor-enzell\"\n            >\n              <ListItemIcon className={classes.contactListIcon}>\n                <GitHubIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"GitHub\" />\n            </ListItem>\n            <Divider />\n            <ListItem\n              button\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://huggingface.co/viktor-enzell\"\n            >\n              <ListItemIcon className={classes.contactListIcon}>\n                <span role=\"img\" aria-label=\"hugging face emoji\" className={classes.huggingfaceIcon}>\n                  🤗\n                </span>\n              </ListItemIcon>\n              <ListItemText primary=\"Hugging Face\" />\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  ListItemText,\n  ListItem,\n  IconButton,\n  Divider,\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  Tabs,\n  Tab,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { headerHeight } from \"../views/Home\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { slimWidth } from \"../views/Home\";\n\nconst drawerWidth = 240;\nconst swapNavbarWidth = 960;\nconst activeButtonColor = \"#eeeeee\";\nconst toolBarMaxWidth = slimWidth - 48;\n\nconst useStyles = makeStyles({\n  root: {\n    height: headerHeight,\n  },\n  appBar: {\n    backgroundColor: \"white\",\n    display: \"flex\",\n    alignItems: \"center\",\n    boxShadow: \"none\",\n  },\n  toolBar: {\n    maxWidth: toolBarMaxWidth,\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    height: headerHeight,\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  appBarDivider: {\n    width: \"100%\",\n  },\n  tab: {\n    minWidth: \"100px\",\n    textDecoration: \"none\",\n    color: \"black\",\n  },\n  link: { textDecoration: \"none\", color: \"black\" },\n  menuButton: {\n    marginRight: \"16px\",\n  },\n});\n\nexport default function Navbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const { width } = useWindowDimensions();\n  const { pathname } = useLocation();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          {width > swapNavbarWidth ? (\n            <Tabs>\n              {[\n                { key: \"/\", name: \"Home\" },\n                { key: \"/portfolio\", name: \"Portfolio\" },\n              ].map((item) => (\n                <Tab\n                  label={item.name}\n                  className={classes.tab}\n                  style={{\n                    backgroundColor: pathname === item.key && activeButtonColor,\n                  }}\n                  component={Link}\n                  to={item.key}\n                  key={item.key}\n                />\n              ))}\n            </Tabs>\n          ) : (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              className={classes.menuButton}\n              onClick={() => setOpen(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n        </Toolbar>\n        <Divider className={classes.appBarDivider} />\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"temporary\"\n        anchor=\"right\"\n        open={open}\n        classes={{ paper: classes.drawerPaper }}\n        ModalProps={{ onBackdropClick: () => setOpen(false) }}\n      >\n        <List>\n          {[\n            { key: \"/\", name: \"Home\" },\n            { key: \"/portfolio\", name: \"Portfolio\" },\n          ].map((item) => (\n            <Link to={item.key} key={item.key} className={classes.link}>\n              <ListItem\n                button\n                key={item.key}\n                onClick={() => {\n                  setOpen(false);\n                }}\n                style={{\n                  backgroundColor: pathname === item.key && activeButtonColor,\n                }}\n              >\n                <ListItemText\n                  primary={item.name}\n                  classes={{ primary: classes.listItem }}\n                />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100px\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return <div className={classes.root}></div>;\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { headerHeight, footerHeight, topMargin } from \"./Home\";\nimport { Divider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: topMargin,\n    height: \"100%\",\n    width: \"100%\",\n    minHeight: `calc(100vh - ${headerHeight}px - ${footerHeight}px - ${topMargin}px)`,\n  },\n  portfolioGrid: {\n    marginTop: \"0px\",\n    marginLeft: \"-24px\",\n  },\n  textParagraph: {\n    marginBottom: \"24px\",\n  },\n  card: {\n    borderStyle: \"solid\",\n    borderColor: \"#e0e0e0\",\n    borderWidth: \"1px\",\n    boxShadow: \"none\",\n  },\n});\n\nexport default function Portfolio() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\" gutterBottom>\n        Portfolio\n      </Typography>\n      <Typography className={classes.textParagraph}>\n        This is a selection of projects I have previously worked on. It's a\n        mixture of university, work, and hobby projects that I have shortly\n        summarized and added links to further resources.\n      </Typography>\n\n      <Divider />\n\n      <Grid container spacing={3} className={classes.portfolioGrid}>\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"talking emoji\">\n                  🗣\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Swedish Speech-to-text\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, NLP, Python\n              </Typography>\n              <Typography>\n                In my Master's thesis at KTH, I trained language models to\n                improve a Swedish open-source speech-to-text model for a\n                specific domain. The domain-specific language models are not\n                open-sourced but I trained a generic language model which is\n                currently the highest ranking speech-to-text model on the\n                Swedish Common Voice test set.\n                <br />\n                <br />\n                The generic model can be accessed through Hugging Face directly\n                or by using the TMH Python package where it is integrated. A\n                link to the full thesis report will be included shortly.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://huggingface.co/viktor-enzell/wav2vec2-large-voxrex-swedish-4gram\"\n                target=\"_blank\"\n              >\n                Repo\n              </Button>\n              <Button\n                size=\"small\"\n                href=\"https://huggingface.co/spaces/viktor-enzell/wav2vec2-large-voxrex-swedish-4gram\"\n                target=\"_blank\"\n              >\n                Demo\n              </Button>\n              <Button\n                size=\"small\"\n                href=\"https://pypi.org/project/tmh/\"\n                target=\"_blank\"\n              >\n                TMH\n              </Button>\n              <Button\n                size=\"small\"\n                href=\"https://paperswithcode.com/sota/speech-recognition-on-common-voice-swedish\"\n                target=\"_blank\"\n              >\n                leaderboard\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"man on horse emoji\">\n                  🏇\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Employment at Bricco\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                Python, Django, Node, React, DevOps\n              </Typography>\n              <Typography>\n                Between my Bachelor's and Master's degrees, I worked full-time\n                for one year at the consultancy firm Bricco. During my Master's\n                studies, I continued working part-time. It's a small company\n                where I had the opportunity to work in all parts of the stack\n                and on several different projects.\n                <br />\n                <br />\n                Main technologies included Python, Django, React, Node,\n                Elasticsearch, Relational databases, NoSQL databases, GCP and\n                Linux servers.\n                <br />\n                <br />\n                Below is a link to a website I was part in creating from start\n                to finish.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://svenskgalopp.se\"\n                target=\"_blank\"\n              >\n                svenskgalopp.se\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"pointing up emoji\">\n                  ☝️\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Sign Language Teacher\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, Vision, Python\n              </Typography>\n              <Typography>\n                A group project during my exchange semester at the Master in\n                Artificial Intelligence at UPC in Barcelona. Using the web\n                camera of a laptop and hand tracking with MediaPipe, we trained\n                a classifier for sign language. Using this classifier, we built\n                a program for teaching sign language.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/sign-language-teacher\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"news paper emoji\">\n                  📰\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                News Recommender\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, NLP, Python, Django\n              </Typography>\n              <Typography>\n                A website for searching through scraped news articles where the\n                results are ranked based on previous user feedback. News\n                articles and user preferences are represented in the same latent\n                space by training a doc2vec model on news articles. Done as a\n                group project at KTH.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/news-recommender\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"talk bubble emoji\">\n                  💬\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Tweet Analyzer\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, NLP, Python, Django\n              </Typography>\n              <Typography>\n                A tool for analyzing tweet engagement by looking at statistics\n                and sentiment. Done as a group project at the Master in\n                Artificial Intelligence at UPC in Barcelona.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/tweet-analyser\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"house emoji\">\n                  🏡\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Business Website Design\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                Wordpress, CSS, UI\n              </Typography>\n              <Typography>\n                A freelance project, redesigning the layout of a business\n                website. It's a multi-faceted business involved in interior\n                design, events, clothing, and a cafe.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\" href=\"https://byhuset.se\" target=\"_blank\">\n                byhuset.se\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"robot emoji\">\n                  🤖\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Dataless Text Classification with BERT\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, NLP, Python\n              </Typography>\n              <Typography>\n                An exploration of dataless text classification with BERT. The\n                main chunk of the work is presented in a separate report and\n                this repo contains the code for reproducing the experiments.\n                Done in a group of two, at the Master in AI at UPC.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/fine-tune-bert\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"building emoji\">\n                  🏢\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Property Investment Analyzer\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, GPT-3, Python, Django\n              </Typography>\n              <Typography>\n                An application for analyzing the profitability of apartment\n                investments in Barcelona. Using regression models for house\n                price and rent price, and integrating GPT-3 through the OpenAI\n                API for generating a property description. Done as a group\n                project at the Master in AI at UPC.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/idss-project\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"joystick emoji\">\n                  🕹\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Reinforcement Learning Racing Game\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                AI, C#, Unity\n              </Typography>\n              <Typography>\n                A Mario Kart-like game in Unity, using reinforcement learning to\n                train the opponents. Done as a group project at the Master in AI\n                at UPC.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/Maddi97/NDVW_RacingGame\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"note emoji\">\n                  📝\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Collaborative Real-time Notes App\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                Node, React\n              </Typography>\n              <Typography>\n                Using websockets to create a real-time collaborative note taking\n                app. Done as a group project during my Bachelor studies at\n                Uppsala University.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/pinboard\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography gutterBottom variant=\"body2\">\n                <span role=\"img\" aria-label=\"pin emoji\">\n                  📍\n                </span>\n              </Typography>\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\n                Visit List\n              </Typography>\n              <Typography gutterBottom color=\"textSecondary\">\n                Java, React\n              </Typography>\n              <Typography>\n                Playing around with Java and the Spring Framework to create a\n                REST API backend for a visit list with a React client.\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                href=\"https://github.com/viktor-enzell/visit-list\"\n                target=\"_blank\"\n              >\n                Github repo\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { headerHeight, footerHeight, topMargin } from \"./Home\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: topMargin,\n    height: \"100%\",\n    width: \"100%\",\n    minHeight: `calc(100vh - ${headerHeight}px - ${footerHeight}px - ${topMargin}px)`,\n  },\n  textWrapper: {\n    marginTop: \"20vh\",\n  },\n  statusCode: {\n    fontSize: 54,\n    textAlign: \"center\",\n    marginBottom: 8,\n  },\n});\n\nexport default function Fallback() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.textWrapper}></div>\n      <Typography variant=\"h2\" component=\"h1\" className={classes.statusCode}>\n        404\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Portfolio from \"./Portfolio\";\nimport Fallback from \"./404\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/portfolio\" component={Portfolio} />\n      <Route component={Fallback} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Routes from \"./views/Routes\";\nimport { slimWidth } from \"./views/Home\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n      \"Birch\",\n    ].join(\",\"),\n    h1: {\n      fontSize: 60,\n      textAlign: \"left\",\n      fontFamily: \"Helvetica\",\n      fontWeight: \"bold\",\n      maxWidth: slimWidth,\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n    },\n    h2: {\n      fontSize: 28,\n      textAlign: \"left\",\n      fontFamily: \"Helvetica\",\n      fontWeight: \"bold\",\n      maxWidth: slimWidth,\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n    },\n    h3: {\n      fontFamily: \"Helvetica\",\n      fontSize: 22,\n      fontWeight: \"bold\",\n      textAlign: \"left\",\n      maxWidth: slimWidth,\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n    },\n    h4: {\n      fontFamily: \"Helvetica\",\n      fontSize: 24,\n      textAlign: \"left\",\n      maxWidth: slimWidth,\n    },\n    body1: {\n      fontFamily: \"Helvetica\",\n      textAlign: \"left\",\n      maxWidth: slimWidth,\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n    },\n    body2: {\n      fontSize: 36,\n      textAlign: \"center\",\n      fontFamily: \"Helvetica\",\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n    },\n  },\n  palette: {\n    primary: grey,\n    background: {\n      default: \"white\",\n    },\n  },\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Container maxWidth=\"md\">\n          <Grid container>\n            <Navbar />\n          </Grid>\n          <Grid container>\n            <Routes />\n          </Grid>\n          <Grid container>\n            <Footer />\n          </Grid>\n        </Container>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}